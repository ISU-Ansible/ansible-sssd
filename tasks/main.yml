---
- name: SSSD | Include OS-specific variables
  tags:
    - sssd
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}_{{ ansible_distribution_version | replace('.','_') }}.yml"
    - "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}_{{ ansible_distribution_version  | replace('.','_') }}.yml"
    - "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "default.yml"

- name: SSSD | Assert that OS is supported
  tags: 
    - sssd
    - install
    - configure
  assert:
    that: sssd_os_supported

- name: SSSD | Register existence of cache
  tags:
    - sssd
    - install
  stat:
    path: /var/lib/sss/db/ccache*
  register: ccache

- name: SSSD | Set facts for sssd_manage_service and sssd_allow_reload
  tags:
    - sssd
    - install
    - configure
    - service
  set_fact:
    sssd_manage_service: "{{ false if ansible_virtualization_type == 'docker' else true }}"
    sssd_allow_reload: "{{ false if ansible_virtualization_type == 'docker' else true }}"

- name: SSSD | Installation
  tags: 
    - sssd
    - install
  package:
    name: "{{ item }}"
    state: installed
  with_items:
    - "{{ sssd_packages }}"

- name: SSSD | Configuration
  tags: 
    - sssd
    - configure
  template:
    src: sssd.j2
    dest: "{{ sssd_configuration_file }}"
    owner: "{{ sssd_configuration_owner }}"
    group: "{{ sssd_configuration_group }}"
    mode: "{{ sssd_configuration_mode }}"

- name: SSSD | Domain Configuration
  tags:
    - sssd
    - configure
  template: 
    src: sssd_domain.j2
    dest: "{{ sssd_configuration_domain }}/{{ item.name }}.conf"
    owner: "{{ sssd_configuration_owner }}"
    group: "{{ sssd_configuration_group }}"
    mode: "{{ sssd_configuration_mode}}"
  with_items: 
    - sssd_domain
  when: sssd_domain 

- name: SSSD | Service
  tags: 
    - sssd
    - service
  service:
    name: "{{ sssd_service_name }}"
    state: started
    enabled: yes
  when: sssd_manage_service

- name: SSSD | Register that the sssd role has run
  tags: [ 'sssd' ]
  set_fact: sssd_has_run=true
  when: sssd_has_run is not defined