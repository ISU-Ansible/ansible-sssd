---
- name: SSSD | Include OS-specific variables
  tags: [ 'sssd' ]
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}_{{ ansible_distribution_minor_version}}.yml"
    - "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}_{{ ansible_distribution_minor_version}}.yml"
    - "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "default.yml"

- name: SSSD | Assert that OS is supported
  tags: [ 'sssd' ]
  assert:
    that: sssd_os_supported

- name: SSSD | Register existence of cache
  stat:
    path: /var/lib/sss/db/ccache*
  register: ccache

- name: SSSD | Installation
  tags: [ 'sssd', 'install' ]
  package:
    name: "{{ item }}"
    state: installed
  with_items:
    - "{{ sssd_packages }}"

- name: SSSD | Configuration
  tags: [ 'sssd', 'configure' ]
  template:
    src: sssd.j2
    dest: "{{ sssd_configuration_file.filename }}"
    owner: "{{ sssd_configuration_file.owner }}"
    group: "{{ sssd_configuration_file.group }}"
    mode: "{{ sssd_configuration_file.mode}}"

- name: SSSD | Service
  tags: [ 'sssd', 'service' ]
  service:
    name: "{{ sssd_service_name }}"
    state: started
    enabled: yes
  register: sssd_service_started

- debug:
    var: sssd_service_started

- name: SSSD | Register that the sssd role has run
  tags: [ 'sssd' ]
  set_fact: sssd_has_run=true
  when: sssd_has_run is not defined